/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/styles.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/styles.css ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n  --light-mode-bg: rgb(240, 240, 240);\n  --light-mode-text: rgb(18, 18, 18);\n\n  --oxblood: #900;\n  --charcoal: #323232;\n  --heather-gray: #c7c9cc;\n  --dark-olive: #596D48;\n  --pastel-pink: #FDD;\n  --off-white: #f1f1f1;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --dark-mode-bg: rgb(18, 18, 18);\n    --dark-mode-text: rgb(240, 240, 240);\n  }\n}\n\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  /* background: hsl(0, 100%, 50% / .1); */\n}\n\nhtml,\nbody {\n  --scrollbar-width: 0px;\n  min-height: 100vh;\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  overflow-x: hidden;\n\n  background-color: var(--light-mode-bg);\n  color: var(--light-mode-text);\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  /* display: grid;\n  grid-template: 0.75fr 3fr 0.25fr / repeat(3, 1fr);\n  grid-gap: 10px; */\n\n  /* grid-template-rows: 1fr 2.5fr 0.5fr; */\n  /* grid-template-columns: 0.5fr 3.5fr; */\n  /* grid-template-columns: repeat(4, 1fr); */\n\n  /* OPTION: Alternative setup - reactivate 'grid-areas' below & possibly refactor this to work within both the .container below and here in .content (split this code up) */\n  /* Read up on grid-template-areas. What do the dots represent on each line below? */\n  \n  /* grid-template: 200px auto 100px / 1fr 3fr 1fr;\n  grid-template-areas: \n    \"heading heading heading\"\n    \"sidebar main .\"\n    \"footer . .\"; */\n}\n\n.content > * {\n  padding: 15px;\n  font-size: 32px;\n  font-weight: bold;\n}\n\n.search-wrapper {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.search {\n  display: flex;\n  flex-direction: row;\n}\n\n/* Search bar styling starts here (NOT the div that the search bar is in)  */\n.search #search-text {\n  display: block;\n  font-family: inherit;\n  /* font-size: 1rem; */\n  margin: 1.8rem;\n  padding: 5px;\n  box-sizing: border-box;\n  background-color: #EEE;\n  width: 80%;\n  height: 30px;\n\n  box-shadow: inset 1px 1px 3px #CCC;\n  border-radius: 28px;\n\n  appearance: none;\n}\n\n#search-text {\n  font-size: 60%;\n}\n\n.temperature-scales {\n  /* Swap this to 'display: none;' if we can't figure out JS for the Fahrenheit/Celsius toggling */\n  display: flex; \n  justify-content: center;\n  align-items: center;\n  margin: 1rem;\n}\n\nbutton {\n  margin: 1.5rem;\n  padding: 0.75rem 2rem;\n  border-radius: 100vw;\n\n  background-color: goldenrod;\n  border: 1px solid goldenrod;\n}\n\n.weather-wrapper {\n  margin-bottom: 2rem;\n}\n\n.weather-condition {\n  text-transform: capitalize;\n}\n\n.location-wrapper {\n  display: flex;\n  flex-direction: row;\n  margin-top: 5rem;\n}\n\n/* Potentially for the transition of all the elements on the first page. May need two of these animation frames?\ntransform: translateY(1000px);\ntransition: transform 1s ease-in-out;\ntransform: translateY(-100px); */`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://odin-weather-app/./src/styles.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/styles.css":
/*!************************!*\
  !*** ./src/styles.css ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./styles.css */ \"./node_modules/css-loader/dist/cjs.js!./src/styles.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://odin-weather-app/./src/styles.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./weatherAppLogic.js */ \"./src/weatherAppLogic.js\");\n/* harmony import */ var _weatherUI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./weatherUI.js */ \"./src/weatherUI.js\");\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./styles.css */ \"./src/styles.css\");\n\n\n\n// import Plus from './img/plus.png';\n\n(0,_weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__.getForecast)(\"London, UK\");\n\n// TODO: Doesn't recognize the previous location in the getForecast call above. Location shows 'undefined' & API grabs default (Fine, NY)\n(0,_weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__.processData)();\n\n// Search bar functionality responsible for reading the location data in the search bar and fetching the forecast for that location\nasync function searchFilter() {\n  // OBTAIN the text inside the search bar of the UI and convert that text to lowercase\n  const searchInput = document.querySelector('.search-text').value.toLowerCase();\n  \n  try {\n    // CALL getForecast with searchInput as the parameter representing the location to get the weather from\n    const myWeather = await (0,_weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__.getForecast)(searchInput);\n\n    // IF the location that the user inputs can't be found by the weather API THEN\n    if (!myWeather) {\n      // CREATE a <span> element inside the 'search-results' div with an error message as text\n      const searchResults = document.querySelector('.search-results');\n      const searchError = document.createElement('span');\n      const errorText = document.createTextNode(\"No GIF related to the search was found\");\n  \n      // APPEND the error message to its <span> element & the <span> element to the 'search-results' div\n      searchError.appendChild(errorText);\n      searchResults.replaceChildren();\n      searchResults.appendChild(searchError);\n  \n      // SHOW the <span> element with its error message in the UI\n      return; // Supposed to end the function without doing anything else. Do we need it?\n    // ELSE log the weather location result from the search bar in the console\n    } else {\n      (0,_weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__.processData)();\n    }\n    // ENDIF\n  } catch (err) {\n    console.error(`Error: ${err}`);\n  }\n};\n\nconst searchButton = document.getElementById('search-btn');\n\n// Search button logic that calls the searchFilter function on button click\n// WHEN the user inputs a location in the Search bar & clicks the Search button\nsearchButton.addEventListener('click', async (e) => { // CALL the searchButton event listener\n  e.preventDefault();\n  \n  // Variable for 'searchFilter' function\n  // TODO: userLocation currently equals 'undefined' because this function isn't done running when 'renderCurrentTemp(userLocation)' is called in the 'locationTemp' variable below\n  const userLocation = await searchFilter();\n\n  // BRANCH: REMOVE (HIDE) the Heading element\n\n  // BRANCH: SET the remaining elements to the top of the webpage\n\n  // CALL the render forecast functions under those elements that will:\n\n  // Uncaught TypeError: Cannot read properties of undefined (reading 'then') - was userLocation.then(() => {} with async/await)\n  // SHOW the forecast for that location for that day\n\n  // TODO: When renderCurrentTemp runs, all code inside its conditional if/else (see UI module) is bypassed & nothing renders. Instead, we end up getting 'locationTemp = undefined' and 'userLocation = undefined'. Find out why.\n\n  // Called when processData is called at the end of the searchFilter function call in the event listener, at the point where processData calls getForecast on the 'weather' variable declaration. Because 'userLocation' is currently 'undefined' above, 'locationTemp' here is also 'undefined'\n  // *ATTEMPT #1: Wrap 'renderCurrentTemp' code inside a try/catch block\n  // *ATTEMPT #2: Call 'userLocation' itself on await instead of 'renderCurrentTemp(userLocation)' - await has no effect on the expression\n  // *ATTEMPT #3: renderCurrentTemp(userLocation); - no variable declaration at all\n  const locationTemp = await (0,_weatherUI_js__WEBPACK_IMPORTED_MODULE_1__.renderCurrentTemp)(userLocation);\n\n  // renderCurrentTemp(userLocation);\n  \n  // BRANCH: SHOW the forecast for that location during the next 7 days\n  // renderWeeklyTemps\n\n  // DISPLAY the GIF for the related weather condition as a background image\n  (0,_weatherUI_js__WEBPACK_IMPORTED_MODULE_1__.getWeatherGIF)(userLocation);\n\n  // TODO: JS never gets to this line after displaying the correct weather GIF. Do we even need to return this?\n  return locationTemp;\n\n  // getForecast.response.currentConditions.temp; (for current temp of location searched for) - TODO: Delete this?\n});\n\n// Fahrenheit and Celsius button logic that call 'toggleFahrenheit()' & 'toggleCelsius()' respectively to toggle the temperature number being shown in the UI of the current location between the degrees in Fahrenheit and the degrees in Celsius\n// let tempScale = document.querySelector('.weather-temp');\nconst fahrenheitBtn = document.getElementById('fahrenheit-btn');\nconst celsiusBtn = document.getElementById('celsius-btn');\n\nfahrenheitBtn.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  let celsiusScale = document.querySelector('.weather-temp');\n  (0,_weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__.toggleFahrenheit)(celsiusScale);\n\n  // Uncaught TypeError: Cannot set properties of null (setting 'innerText')\n  celsiusScale.innerText = _weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__.data.temperature + \"°F\"\n});\n\ncelsiusBtn.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  let fahrenheitScale = document.querySelector('.weather-temp');\n  (0,_weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__.toggleCelsius)(fahrenheitScale);\n\n  // Uncaught TypeError: Cannot set properties of null (setting 'innerText')\n  fahrenheitScale.innerText = _weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__.data.temperature + \"°C\"\n});\n\n// Random cat GIF and GIF search code template for use above\n\n// Image for random cat GIF on page load as well as GIF refresh for \"More Cats!\" button\n// const img = document.querySelector('img');\n    \n// Search DOM\n// const searchButton = document.getElementById('search-btn');\n\n// Search bar functionality\n// function searchFilter() {\n//   const searchInput = document.querySelector('.search-text').value;\n//   fetch(`https://api.giphy.com/v1/gifs/search?api_key=Pge93Q0t0NjGU4FoHUse9HbIP6TRMCtP&q=${searchInput}&limit=5`, {mode: 'cors'})\n//     .then(response => response.json())\n//     .then(response => {\n//       // Supposed to handle any scenario when GIPHY doesn't find any GIFs related to the search\n//       if (response.data.length === 0) {\n//         const searchError = document.querySelector('span');\n//         const errorText = document.createTextNode(\"No GIF related to the search was found\");\n//         searchError.appendChild(errorText);\n\n//         // When this console.log is the only code under this 'then', all data info from the search shows up in console\n//         console.log(response); \n\n//         return; // Supposed to end the function without doing anything else. Do we need it?\n//       }\n\n//       const searchResults = document.querySelector('.search-results');\n//       searchResults.replaceChildren();\n\n//       response.data.forEach(result => {\n//         const gifWrapper = document.createElement(\"div\");\n//         gifWrapper.classList.add(\"result-wrapper\");\n\n//         const resultGif = document.createElement(\"img\");\n//         resultGif.src = result.images.original.url;\n\n//         gifWrapper.appendChild(resultGif);\n//         searchResults.appendChild(gifWrapper);\n//       })\n//     })\n//     .catch(function(err) {\n//       console.error(`Error: ${err}`);\n//     });  \n// };\n\n// async function getCats() {\n//   const response = await fetch('https://api.giphy.com/v1/gifs/translate?api_key=Pge93Q0t0NjGU4FoHUse9HbIP6TRMCtP&s=cats', {mode: 'cors'})\n//   const catData = await response.json();\n//   img.src = catData.data.images.original.url;\n// }\n\n// getCats();\n\n// const catsButton = document.querySelector('#fetch');\n\n// catsButton.addEventListener('click', async () => {\n//   try {\n//     const fetchCats = await fetch('https://api.giphy.com/v1/gifs/translate?api_key=Pge93Q0t0NjGU4FoHUse9HbIP6TRMCtP&s=cats', {mode: 'cors'})\n//     const anotherCat = await fetchCats.json();\n//     img.src = anotherCat.data.images.original.url; \n//   } catch (e) {\n//     console.error(`Error: ${e}`);\n//   }\n// });\n\n\n// Possible template to use for the weather icons after the user has search for the forecast of a location\n// const headerTask = document.getElementById(\"add-task\");\n\n// const taskIcon = new Image();\n// taskIcon.src = Plus;\n// taskIcon.classList.add(\"image-button\");\n// headerTask.appendChild(taskIcon);\n\n//# sourceURL=webpack://odin-weather-app/./src/index.js?");

/***/ }),

/***/ "./src/weatherAppLogic.js":
/*!********************************!*\
  !*** ./src/weatherAppLogic.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   data: () => (/* binding */ data),\n/* harmony export */   getForecast: () => (/* binding */ getForecast),\n/* harmony export */   processData: () => (/* binding */ processData),\n/* harmony export */   toggleCelsius: () => (/* binding */ toggleCelsius),\n/* harmony export */   toggleFahrenheit: () => (/* binding */ toggleFahrenheit)\n/* harmony export */ });\n// Variable that allows both the 'getForecast' and 'processData' functions to declare the same user input location via global scope\nlet myLocation;\n\n// Variable that allows both toggle functions below to declare the same object created from 'processData' via global scope\nlet data;\n\n// Hits the API and returns all the weather data for a location\n// OPTION: Refactor this to the MDN example we have in Obsidian notes (under 'Divide & Conquer')\nasync function getForecast(location) { \n  try {\n    const response = await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?key=8997Y4VLTDSVA5KYY96GVK9Y4`);\n\n    myLocation = location; // This is so 'processData' below remembers the user input location\n    const forecastData = await response.json();\n\n    console.log(forecastData);\n    return forecastData;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// PROCESSES the JSON data we're getting from getForecast() & returns an object that has only the data we need for the app\nasync function processData() {\n  try {\n    // CALL getForecast function\n    const weather = await getForecast(myLocation);\n\n    // WHEN this function receives the JSON data from getForecast\n\n    // SET a variable equal to the \"resolvedAddress\" property \n    let address = weather.resolvedAddress;\n    console.log(address);\n\n    // SET a variable equal to the \"temp\" property under the \"currentConditions\" object\n    let todaysTemp = weather.currentConditions.temp;\n    console.log(todaysTemp);\n\n    // SET a variable equal to the \"icon\" property (high level weather summary) under the \"currentConditions\" object\n    let currentSummary = weather.currentConditions.icon;\n    console.log(currentSummary);\n\n    // SET a variable equal to the \"days\" array \n    let futureTemps = weather.days;\n    console.log(futureTemps);\n\n    // PRINT a new object that only has the current daily temp, the 7 day forecast and whether or not the temp should be F or C from the JSON\n    const outlook = {\n      location: address,\n      temperature: todaysTemp,\n      summary: currentSummary,\n      weeklyForecast: [],\n      storeForecast: function () {\n        // INIT a \"for\" loop for the \"days\" array (represents 7 Day Forecast)\n        for (const day of futureTemps) { \n          // INIT the counter variable for this loop and set it's value to 1 (1 representing tomorrow's forecast)\n          if (day === futureTemps[0]) { \n            continue;\n          }\n\n          // WHILE the counter is smaller than 7 \n            // GET the temp high, the temp low & the current temp of that day. Increment the counter by 1\n            // REPEAT getting temperature and weather conditions for each future date after today's date at the location\n            // UNTIL the 7th day after today's date is reached (include the 7th day's future forecast)\n          if (day === futureTemps[8]) {\n            break;\n          }\n\n          let futureForecast = {\n            futureDate: day.datetime,\n            tempHigh: day.tempmax,\n            tempLow: day.tempmin,\n            weatherIcon: day.icon\n          };\n          \n          this.weeklyForecast.push(futureForecast);\n        }\n      }\n    }\n\n    outlook.storeForecast();\n\n    // PRINT = console.log()\n    console.log(outlook);  \n\n    // SET the global variable 'data' to the 'outlook' object created in this function so the toggle functions below can use the object\n    data = outlook; \n\n    // We still need to return the outlook object here for now because it's linked to the rendering functions in the UI module. If we don't return it as the code is, this happens - TypeError: Cannot read properties of undefined (reading 'outlook')\n    // We probably DON'T need it, but it would require changing the lines in the render functions where 'outlook' is fetched\n    return { outlook };\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// TODO: Functions are saying that the 'x' parameter is null everywhere it's called and the 's' variable where the String is the expression is also 'null'. Function isn't pulling the 'tempScale' DOM (the text in the h4 element) to use as the parameter to toggle at all.\n\n// *ATTEMPT #1: Removed 'x' as the parameter everywhere its mentioned in both functions to see if that solved null since 'tempScale' is the parameter on the event listener in index module. It simply make the 's' variable equal an empty string.\n\n// ATTEMPT #2: Declare the h4 element tag in the DOM inside the button logic in the index module, then rework both of these functions to still include the equation being returned except change it in our custom 'outlook' object (declare the object in both functions, then code the rest based on that), then directly render it in the button logic in the index module\n\n// BEFORE ATTEMPT #3: Pseudocode both functions below AND the event listener buttons in the index module\n\n// Example code for replacing Fahrenheit degree with its Celsius equivalent using the 'replace()' method in JS\n// The 'convert' function sets the Celsius number based on the number of Fahrenheit degrees passed in a string to the f2c function, which then the f2c function returns the number in Celsius. Instead of \"x\" being the parameter, we would have no parameter in ours.\n\n// See 'Revisiting Rock Paper Scissors' lesson in Foundations to learn how to merge the branch correctly when the F/C feature is done\n\n\n// ***WHERE WE LAST LEFT OFF (READ FIRST)***\n\n// Every time 'processData' is called (even via 'async/await' when declaring a variable using 'processData' as the expression), a new object is created due to 'processData' calling 'getForecast', which makes a new API call to Weather Crossing\n\n// How do we take existing objects/json we've already pulled from an API and use/declare info from them without calling the API again? How do we take a new object we created from the API call/json, change a value on one of its properties, then return that value/info without fetching a new object via another API call (by calling 'processData' or 'getForecast')?\n\n\n// Remember that these toggle functions should only be responsible for toggling the temps in the outlook object, NOT displaying F/C in the UI\n// TODO: Remove 'async' from both toggle functions and see if they still work properly (they no longer call processData)\n\nasync function toggleCelsius() {\n  // Declare the 'outlook' object here\n  // GET the 'outlook' object returned from 'processData'\n  // let outlook = await processData.outlook; // TODO: 'outlook = undefined' when trying to declare the object returned from 'processData'\n\n\n  // TODO: Still need to find a way to use the original 'outlook' object that 'processData' returns w/o having to call the function again \n  // *ATTEMPT #1: Made the toggle function async/await & changed this to 'await processData.outlook'\n  // ATTEMPT #2: Same as first attempt except 'await' on 'processData' only, then declare the temp variable off of that (just like in UI funcs)\n  // CALL the 'processData' function\n  // const fetchOutlook = await processData();\n\n  // SET a variable equal to the temperature number\n  // let getScale = fetchOutlook.outlook.temperature;\n  let getScale = data.temperature; // Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'temperature') line 114\n\n  // function convertCelsius(str, getScale, offset, scale) { // \"getScale\" gives access to the number of Fahrenheit degrees\n  //   return `${((getScale - 32) * 5) / 9}C`;\n  // }\n\n  // CALCULATE the Fahrenheit temperature in Celsius\n  const convertCelsius = () => {\n    const celsius = `${((getScale - 32) * 5) / 9}`; // TODO: Try adding 'Math.round' & see what happens (e.g. convertFahrenheit below)\n    // fetchOutlook.outlook.temperature = celsius;\n    data.temperature = celsius;\n  };\n\n  // const scale = String(arg);\n\n  // BRANCH: This could be useful as a way to test the current value and make sure its in 'Fahrenheit' before changing it (modify this regex?)\n  // const test = /(-?\\d+(?:\\.\\d*)?)F\\b/g; // Checks for any number ending in \"F\"\n\n  // Uncaught (in promise) TypeError: getScale.replace is not a function - because 'replace' looks for a String, not a value from an object\n  // return scale.replace(test, convertCelsius);\n\n  // CALL 'convertCelsius' to change the Fahrenheit temperature to Celsius in the 'outlook' object\n  convertCelsius();\n\n  // PRINT the 'outlook' object to console to confirm the temperature change to Celsius\n  // console.log(fetchOutlook);\n  // return { fetchOutlook };\n  console.log(data);\n  return { data };\n}\n\n// Our first attempt at the reverse of the above function (Celsius to Fahrenheit). Implement both functions to each button's logic in index?\n// Test this method to see if it works? We might not need 'Math.round()': `${(Math.round(((p1 * 9 / 5) + 32) * 10) / 10)}F`;\n\n// TODO: Current issue is when switching back and forth between Fahrenheit and Celsius, the original 'outlook' object doesn't seem to change as far as the temp value goes. Are the toggle functions simply returning a copy of the original object when they are run? Basically, we are able to switch the temperature scale once but can't switch it again after that (Fahrenheit calculates off the previous Fahrenheit, NOT the current Celsius for example)\n\n// *ATTEMPT #1: Tried to use the logical OR ( II ) operator to represent either object (original or changed) in the 'getScale' variable but doesn't work\n\nasync function toggleFahrenheit() {\n   // CALL the 'processData' function\n  //  const fetchOutlook = await processData();\n\n   // SET a variable equal to the temperature number\n  //  let getScale = fetchOutlook.outlook.temperature;\n\n  let getScale = data.temperature;\n\n  // TODO: Rewrite this function as a function expression (copy/paste convertCelsius above except use this Math.round equation instead)\n  // function convertFahrenheit(str, p1, offset, s) { // \"p1\" gives access to the number of Celsius degrees\n  //   return `${(Math.round(((p1 * 9 / 5) + 32) * 10) / 10)}F`;\n  // }\n\n  // CALCULATE the Celsius temperature in Fahrenheit\n  const convertFahrenheit = () => {\n    const fahrenheit = `${(Math.round(((getScale * 9 / 5) + 32) * 10) / 10)}`;\n    // fetchOutlook.outlook.temperature = fahrenheit;\n    data.temperature = fahrenheit;\n  };\n\n  // const s = String();\n\n  // BRANCH: This could be useful as a way to test the current value and make sure its in 'Celsius' before changing it (modify this regex?)\n  // const test = /(-?\\d+(?:\\.\\d*)?)C\\b/g;\n\n  // return s.replace(test, convertFahrenheit);\n\n  // CALL 'convertFahrenheit' to change the Celsius temperature to Fahrenheit in the 'outlook' object\n  convertFahrenheit();\n\n  // PRINT the 'outlook' object to console to confirm the temperature change to Celsius\n  // console.log(fetchOutlook);\n  // return { fetchOutlook };\n  console.log(data);\n  return { data };\n}\n\n// Delete the commented section below when the current F/C branch is complete. The API doesn't have the temp in both Fahrenheit & Celsius\n\n// OPTION: Figure out how to access both the Fahrenheit and Celsius degrees from the json returned from the API and store both in the 'outlook' object generated from 'processData()'. Then, render (update renderCurrentTemp in UI) and toggle from there\n\n// Example function to use if we can figure out how to add both numbers to the 'outlook' object above (test this - might not work as is)\n// function switchTemp() {\n//   let weatherScale = 'F';\n\n//   if (outlook.temperature === outlook.celsius) {\n//     outlook.temperature = outlook.fahrenheit;\n//   } else {\n//     outlook.temperature = outlook.celsius;\n//   }\n\n//   document.querySelector('weather-temp').innerText = outlook.temperature + '&deg;' + weatherScale;\n// }\n\n\n\n//# sourceURL=webpack://odin-weather-app/./src/weatherAppLogic.js?");

/***/ }),

/***/ "./src/weatherUI.js":
/*!**************************!*\
  !*** ./src/weatherUI.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getWeatherGIF: () => (/* binding */ getWeatherGIF),\n/* harmony export */   renderCurrentTemp: () => (/* binding */ renderCurrentTemp)\n/* harmony export */ });\n/* harmony import */ var _weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./weatherAppLogic.js */ \"./src/weatherAppLogic.js\");\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles.css */ \"./src/styles.css\");\n/* harmony import */ var _img_Emey87_Trainee_Gps_48_png__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./img/Emey87-Trainee-Gps.48.png */ \"./src/img/Emey87-Trainee-Gps.48.png\");\n\n\n\n// import Delete from './img/trash-bin.png';\n\n// DOM for \"Weather Results\" section of the page\nconst forecastDisplay = document.querySelector('.search-results');\n\n// let searchText = document.getElementById('search-text').value.trim();\n\n// Template for rendering the current forecast\nasync function renderCurrentTemp() {\n  // let searchText = document.getElementById('search-text').value.trim();\n\n  try {\n    // CALL 'processData' function (or 'searchFilter' function?)\n    const fetchData = await (0,_weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__.processData)();\n\n    // OBTAIN the 'outlook' object returned from the 'processData' (or 'searchFilter') function\n    // SET a variable equal to the 'outlook' object returned from 'processData' function\n    const weatherInfo = fetchData.outlook; \n\n    // CALL 'replaceChildren' method on the DOM element responsible for holding all UI display elements (forecastDisplay) to remove any weather data from previous searches\n    // OPTION: May not keep this [here] - move to search button event listener in index module?\n    forecastDisplay.replaceChildren(); \n\n    // CREATE a wrapper element to be added to the weather results area to contain the text used for displaying the weather\n    const weatherWrapper = document.createElement('div');\n    weatherWrapper.classList.add('weather-wrapper');\n\n    // CREATE a text element to hold the text that displays the actual temperature\n    let weatherTemp = document.createElement('h4');\n    weatherTemp.classList.add('weather-temp');\n\n    // CALL the 'innerText' method \n    // SET the method equal to the 'temperature' key in the 'outlook' object in order to display the temperature\n    weatherTemp.innerText = weatherInfo.temperature + \"°F\"; \n\n    // CREATE a text element to display the weather condition equal to the 'icon set parameter'\n    const weatherCondition = document.createElement('p');\n    weatherCondition.classList.add('weather-condition');\n    weatherCondition.innerText = weatherInfo.summary.replace(\"-\", \" \");\n\n    // CREATE a wrapper to contain both the location icon and the text for the actual location. Place the next 2 elements under it.\n    const locationWrapper = document.createElement('div');\n    locationWrapper.classList.add('location-wrapper');\n\n    // CREATE a text element to hold the text that displays the location searched for\n    let weatherLocation = document.createElement('p');\n    weatherLocation.classList.add('weather-location');\n    weatherLocation.innerText = weatherInfo.location;\n\n    // CREATE an image element for displaying the 'location' icon used in Google Maps\n    const weatherIcon = new Image();\n    weatherIcon.src = _img_Emey87_Trainee_Gps_48_png__WEBPACK_IMPORTED_MODULE_2__;\n    weatherIcon.classList.add(\"image-button\");\n\n    // APPEND the location elements under their related location wrapper\n    locationWrapper.appendChild(weatherLocation);\n    locationWrapper.appendChild(weatherIcon);\n\n    // APPEND the location wrapper containing all location info, the temperature and the weather condition to the wrapper element\n    weatherWrapper.appendChild(weatherTemp);\n    weatherWrapper.appendChild(weatherCondition);\n    weatherWrapper.appendChild(locationWrapper);\n\n    // APPEND the wrapper element to the 'forecastDisplay' element (the UI container)\n    forecastDisplay.appendChild(weatherWrapper);\n  } catch (err) {\n    console.error(`Error: ${err}`);\n  }\n};\n\n// BRANCH: Need another function responsible for rendering the 7 Day Forecast called 'renderWeeklyTemps()'\n\n\nasync function getWeatherGIF() {\n  // CALL processData function\n  const forecastData = await (0,_weatherAppLogic_js__WEBPACK_IMPORTED_MODULE_0__.processData)();\n\n  // READ the Weather Crossing API's 'icon set parameter' from the returned 'outlook' object (for today's temperature) in processData\n  // SET a variable equal to that 'icon set parameter'\n\n  // OPTION: Potentially concatenate \"-weather\" here to stop the API from getting non-weather related GIFs. Change all conditionals in the first case of the switch statement below to '.startsWith' if we go this route. Not the best since all summary text will show \"Weather\" at the end of each one in the UI.\n  let weatherSummary = forecastData.outlook.summary\n\n  // CREATE an empty <img> element\n  const img = document.createElement('img');\n  img.src = \"#\";\n\n  // Temporary placeholder for appending the <img> element for the GIFs (intended to be used as a background image)\n  forecastDisplay.appendChild(img);\n\n  // OBTAIN the GIFs from the GIPHY API related to that variable representing the weather text in the 'icon set parameter'\n  let summonClip = async () => {\n    try {\n      const fetchClip = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=Pge93Q0t0NjGU4FoHUse9HbIP6TRMCtP&q=${weatherSummary}`, {mode: 'cors'}) // OPTION: Set the '&limit=number' parameter again as currently the function randomly pulls from 50+ GIFs (first 5?)\n    \n      const resultClip = await fetchClip.json();\n      console.log(resultClip);\n\n      // SET a random index for the array of GIFs returned in the GIPHY API json\n      const randomIndex = Math.floor(Math.random() * resultClip.data.length);\n\n      // OBTAIN the GIF at the random index\n      const randomGIF = resultClip.data[randomIndex];\n\n      // BRANCH: Write code that finds the GIF with the largest dimensions in its original version in the data array & display that one\n\n      // CASE weather summary (icon set parameter) OF\n      // BRANCH: \"clear-\" condition always shows a non-weather related GIF as the top GIF from the GIPHY API. Find a fix for this.\n      switch (true) {\n        case // fetch() a random weather GIF from the GIPHY API for any of these 'icon1' conditions\n        (weatherSummary === \"snow\") || (weatherSummary === \"rain\") || (weatherSummary === \"fog\") || \n        (weatherSummary === \"wind\") || (weatherSummary === \"cloudy\"): \n          // APPEND the GIF from the API to that <img> element as a background image\n          // BRANCH: SHOW the GIF as a background image for the weather results in the UI\n\n          // OPTION: Potentially need a 'replaceChildren()' of some kind here if we change the <img> placeholder above for background image\n          img.src = randomGIF.images.original.url;\n          img.style.backgroundImage = img.src;\n          break; // OPTION: May need to be 'return true' instead\n\n        case // fetch() a random weather GIF from the GIPHY API for these 'icon2' conditions\n        (weatherSummary.startsWith(\"partly-\")) || (weatherSummary.startsWith(\"clear-\")) || (weatherSummary.startsWith(\"thunder-\")):\n          // APPEND the GIF from the API to that <img> element as a background image\n          // BRANCH: SHOW the GIF as a background image for the weather results in the UI\n\n          // OPTION: Potentially need a 'replaceChildren()' of some kind here if we change the <img> placeholder above for background image\n          img.src = randomGIF.images.original.url;\n          img.style.backgroundImage = img.src;\n          break; // OPTION: May need to be 'return true' instead\n      }\n\n      // BRANCH: Move this conditional up above the switch statement if possible\n      // IF there is no 'icon set parameter' OR there is no weather-related GIF that the GIPHY API can find\n      if (!weatherSummary || !fetchClip) {\n        // CREATE a <span> or <img> element showing some type of error message as text or an image (browser may show broken image as default)\n        const summaryError = document.createElement('span');\n        const errorMessage = document.createTextNode(\"We couldn't find a matching weather GIF :(\");\n\n        // APPEND the error message (if needed) to the <span> or <img> element & then that element to the 'search-results' div\n        summaryError.appendChild(errorMessage);\n        forecastDisplay.appendChild(summaryError); // Placeholder for now. Will refactor this to show as a background image\n\n        // BRANCH: SHOW that element along with any error message in the UI\n        // TODO: Figure out how to display the error message as the background image itself (where the GIF would normally be). CSS 'background-image' property with 'url(link)' as the key? Create another container to use as the background and append the error to that?\n\n        // 'return' nothing goes here?\n      }\n    } catch (err) {\n      console.error(`Error: ${err}`);\n    }\n  }\n\n  summonClip();\n}\n\n\n\n//# sourceURL=webpack://odin-weather-app/./src/weatherUI.js?");

/***/ }),

/***/ "./src/img/Emey87-Trainee-Gps.48.png":
/*!*******************************************!*\
  !*** ./src/img/Emey87-Trainee-Gps.48.png ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"67c46c1b758bb225eb33.png\";\n\n//# sourceURL=webpack://odin-weather-app/./src/img/Emey87-Trainee-Gps.48.png?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;